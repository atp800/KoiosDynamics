---
import Layout from "@/layouts/Layout.astro";
import Brands from "@/sections/Brands.astro";
import Footer from "@/sections/Footer.astro";
import Header from "@/sections/Header.astro";
import Services from "@/sections/Services.astro";
import SectionTitle from "@/components/SectionTitle.astro";
import { getContactData } from "@/services/data.service";

const data = await getContactData();
---

<Layout meta={data.meta}>
  <Header data={data.headerData} />
  <br><br><br>
  <main class="flex flex-col items-center justify-center min-h-screen">
	<SectionTitle>
		Contact Us
	</SectionTitle>
	<!-- <br><br><br><br> -->
    <div class="w-3/4 mt-32">
      <p>To make an enquiry or if you have any queries, contact us using the form below.</p>
      <form
        action="https://api.web3forms.com/submit"
        method="POST"
        id="form"
        class="needs-validation space-y-5"
        data-astro-reload
        novalidate
      >
        <input type="hidden" name="access_key" value="81349c69-1052-470d-9f15-b3b763045557" />
        <input type="checkbox" class="hidden" style="display:none" name="botcheck" />
		
		
		<div>
			<select
			  name="service"
			  required
			  class="w-full px-4 py-3 border rounded-md outline-none focus:ring-4 border-slate-300 focus:border-slate-600 ring-slate-100"
			>
			  <option value="">Select a service or topic</option>
			  <option value="web">Website Development</option>
			  <option value="analytics">Analytics and Dashboards</option>
			  <option value="ai">AI and Data Science</option>
			  <option value="ai">Coding Support</option>
			  <option value="ai">Multiple Services</option>
			  <option value="ai">General Question</option>
			  <option value="ai">Other</option>
			</select>
		</div>

        <div>
          <input
            type="text"
            placeholder="Name"
            required
            class="w-full px-4 py-3 border rounded-md outline-none focus:ring-4 border-slate-300 focus:border-slate-600 ring-slate-100 placeholder:text-slate-400"
            name="name"
          />
        </div>

        <div>
          <input
            type="email"
            placeholder="Email Address"
            required
            class="w-full px-4 py-3 border rounded-md outline-none focus:ring-4 border-slate-300 focus:border-slate-600 ring-slate-100 placeholder:text-slate-400"
            name="email"
          />
        </div>

        <div>
          <textarea
            name="message"
            required
            placeholder="Your Message"
            class="w-full px-4 py-3 border rounded-md outline-none focus:ring-4 border-slate-300 focus:border-slate-600 ring-slate-100 placeholder:text-slate-400 h-36"
          ></textarea>
        </div>

        <button type="submit" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">
			Send Message
		  </button>
		  <div id="result" class="mt-3 text-center min-h-[50px]"></div> <!-- Set a minimum height -->
		</form>
	  </div>

  </main>
  <Footer data={data.footerData} />
</Layout>

<style>
	/* Styling adjustments */
	.invalid-feedback,
	.empty-feedback {
	  display: none;
	}
	
	.was-validated :placeholder-shown:invalid ~ .empty-feedback {
	  display: block;
	}
	
	.was-validated :not(:placeholder-shown):invalid ~ .invalid-feedback {
	  display: block;
	}
	
	.is-invalid,
	.was-validated :invalid {
	  border-color: #dc3545;
	}
	
	#result {
	  min-height: 50px;  /* Maintain a minimum height */
	  visibility: hidden;  /* Start with result as invisible */
	  color: #dc3545;  /* Default text color for errors */
	}
	
	#result.show {
	  visibility: visible;  /* Only make visible when needed */
	}
  
	/* Ensure consistent space between form and footer */
	main {
	  margin-bottom: 2rem;
	}
  
	/* Additional space maintained after form */
	#form {
	  margin-bottom: 2rem; /* Adjust this value based on your specific design */
	}
</style>

<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    const form = document.getElementById("form");
    const result = document.getElementById("result");

    form.addEventListener("submit", function (e) {
      e.preventDefault();
      form.classList.add("was-validated");
      if (!form.checkValidity()) {
        form.querySelectorAll(":invalid")[0].focus();
        return;
      }
      const formData = new FormData(form);
      const object = Object.fromEntries(formData);
      const json = JSON.stringify(object);

    //   result.innerHTML = "Sending...";
	    // Show sending message
		result.textContent = 'Sending...';
    	result.classList.add('show');

      fetch("https://api.web3forms.com/submit", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          Accept: "application/json",
        },
        body: json,
      })
      .then(async (response) => {
        let json = await response.json();
        if (response.status == 200) {
			result.textContent = json.message;
        	result.style.color = "green";  // Success message in green
        } else {
          console.log(response);
			result.textContent = json.message;
			result.style.color = "red";  // Errors in red
        }
      })
      .catch((error) => {
        console.log(error);
		result.textContent = "Something went wrong!";
      	result.style.color = "red";
      })
      .then(function () {
        form.reset();
        form.classList.remove("was-validated");
        setTimeout(() => {
			result.classList.remove('show');  // Hide result after some time
        }, 5000);
      });
    });
  });
</script>